function init(self)
	msg.post("#", "acquire_input_focus")
	_G.direction = "south"

end
function on_input(self, action_id, action)

	local position = go.get_position()

  local function player_move(compass_direction, x_or_y, position_change)
		position[x_or_y] = position[x_or_y] + position_change
		_G.direction = compass_direction
		if not self.animating then
			sprite.play_flipbook("#sprite", "walk_" .. compass_direction)
			self.animating = true
		end
		if action.released then
			sprite.play_flipbook("#sprite", "idle_" .. compass_direction)
			self.animating = false
		end
  end

	if action_id == hash("Right") then
		player_move("east", "x", 1.5)

	elseif action_id == hash("Left") then
		player_move("west", "x", -1.5)

	elseif action_id == hash("Up") then
		player_move("north", "y", 1.5)

	elseif action_id == hash("Down") then
		player_move("south", "y", -1.5)

	elseif _G.direction == "south" and action_id == hash("Attack") then
		if not self.animating then
			sprite.play_flipbook("#sprite", "attack_south")
			self.animating = true
		end
		if action.released then
			sprite.play_flipbook("#sprite", "idle_south")
			self.animating = false
		end
	elseif _G.direction == "north" and action_id == hash("Attack") then
		if not self.animating then
			sprite.play_flipbook("#sprite", "attack_north")
			self.animating = true
		end
		if action.released then
			sprite.play_flipbook("#sprite", "idle_north")
			self.animating = false
		end
	elseif _G.direction == "east" and action_id == hash("Attack") then
		if not self.animating then
			sprite.play_flipbook("#sprite", "attack_east")
			self.animating = true
		end
		if action.released then
			sprite.play_flipbook("#sprite", "idle_east")
			self.animating = false
		end
	elseif _G.direction == "west" and action_id == hash("Attack") then
		if not self.animating then
			sprite.play_flipbook("#sprite", "attack_west")
			self.animating = true
		end
		if action.released then
			sprite.play_flipbook("#sprite", "idle_west")
			self.animating = false
		end
	end
	go.set_position(position)

end
